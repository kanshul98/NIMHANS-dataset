{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17020\viewh11880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs32 \cf0 > library(psych)\
> library(tidyverse)\
\uc0\u9472 \u9472  Attaching core tidyverse packages \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472  tidyverse 2.0.0 \u9472 \u9472 \
\uc0\u10004  dplyr     1.1.4     \u10004  readr     2.1.5\
\uc0\u10004  forcats   1.0.0     \u10004  stringr   1.5.1\
\uc0\u10004  ggplot2   3.5.1     \u10004  tibble    3.2.1\
\uc0\u10004  lubridate 1.9.3     \u10004  tidyr     1.3.1\
\uc0\u10004  purrr     1.0.2     \
\uc0\u9472 \u9472  Conflicts \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472  tidyverse_conflicts() \u9472 \u9472 \
\uc0\u10006  ggplot2::%+%()   masks psych::%+%()\
\uc0\u10006  ggplot2::alpha() masks psych::alpha()\
\uc0\u10006  dplyr::filter()  masks stats::filter()\
\uc0\u10006  dplyr::lag()     masks stats::lag()\
\uc0\u8505  Use the conflicted package to force all conflicts to become errors\
> library(writexl)\
> library(readxl)\
> library(ppcor)\
Loading required package: MASS\
\
Attaching package: \'91MASS\'92\
\
The following object is masked from \'91package:dplyr\'92:\
\
    select\
\
> getwd()\
[1] "/Users/anshulkandpal/Rdata"\
> library(readxl)\
> nimdata_325 <- read_excel("~/Downloads/nimdata_325.xlsx")\
> View(nimdata_325)                                                                                     \
> view(nimdata_325)\


> str(nimdata_325) # explore the structure of the dataset in brief\
tibble [325 \'d7 24] (S3: tbl_df/tbl/data.frame)\
 $ Weight                  : num [1:325] 69.2 80.3 60 76 102.8 ...\
 $ Height                  : num [1:325] 1.63 1.63 1.5 1.68 1.71 1.74 1.54 1.61 1.48 1.91 ...\
 $ BMI                     : num [1:325] 26 30.2 26.7 26.9 35.2 ...\
 $ Gender                  : chr [1:325] "Male" "Male" "Female" "Male" ...\
 $ Age                     : num [1:325] 44 26 36 44 37 50 33 42 44 22 ...\
 $ address                 : chr [1:325] "metro" "town_dist_vil" "town_dist_vil" "town_dist_vil" ...\
 $ marital_stat            : chr [1:325] "Married" "Married" "Married" "Married" ...\
 $ edu                     : chr [1:325] "grad" "grad" "inter" "inter" ...\
 $ occu                    : chr [1:325] "professionals" "associates/clerks" "Unemployed" "skilled_worker" ...\
 $ income                  : chr [1:325] "med_low" "low" "high" "high" ...\
 $ Medical co-morbidity    : chr [1:325] "yes" "none" "none" "none" ...\
 $ meds                    : chr [1:325] "yes" "yes" "no" "no" ...\
 $ Psychiatric co-morbidity: chr [1:325] "none" "none" "none" "none" ...\
 $ moca                    : num [1:325] 28 19 16 25 24 17 23 23 14 23 ...\
 $ cf_tc                   : num [1:325] 33 30 30 36 35 14 35 35 29 34 ...\
 $ cf_ir                   : num [1:325] 20 7 14 30 17 2 22 20 17 28 ...\
 $ cf_dr                   : num [1:325] 20 4 15 27 23 6 14 14 16 27 ...\
 $ animal_names            : num [1:325] 11 12 13 18 17 10 20 15 13 12 ...\
 $ stroop_tt               : num [1:325] 136 162 145 128 293 218 129 225 148 104 ...\
 $ stroop_err              : num [1:325] 11 10 5 3 3 8 1 5 2 2 ...\
 $ nback_1                 : num [1:325] 6 8 3 8 8 5 8 6 2 7 ...\
 $ nback_2                 : num [1:325] 5 7 3 7 6 4 7 5 1 6 ...\
 $ dvt_tt                  : num [1:325] 290 228 209 236 365 401 329 360 407 340 ...\
 $ dvt_err                 : num [1:325] 3 3 17 7 39 9 7 19 10 2 ...\


> describe(nimdata_325) #descriptive stats or the dataset in brief\
                          vars   n   mean    sd median trimmed   mad    min    max  range  skew kurtosis\
Weight                       1 325  75.88 10.76  74.80   75.22  9.49  50.00 106.00  56.00  0.55    -0.01\
Height                       2 325   1.63  0.09   1.63    1.63  0.10   1.42   1.91   0.49  0.23    -0.21\
BMI                          3 325  28.44  3.51  27.67   28.16  3.28  17.72  40.55  22.83  0.65     0.52\
Gender*                      4 325   1.62  0.49   2.00    1.65  0.00   1.00   2.00   1.00 -0.49    -1.77\
Age                          5 325  35.96  8.85  36.00   36.06 10.38  18.00  51.00  33.00 -0.07    -1.03\
address*                     6 325   1.96  0.67   2.00    1.95  0.00   1.00   3.00   2.00  0.04    -0.81\
marital_stat*                7 325   1.26  0.44   1.00    1.21  0.00   1.00   2.00   1.00  1.06    -0.87\
edu*                         8 325   2.00  1.12   2.00    1.88  1.48   1.00   4.00   3.00  0.66    -1.01\
occu*                        9 325   2.83  1.08   3.00    2.91  1.48   1.00   4.00   3.00 -0.36    -1.20\
income*                     10 325   2.44  1.09   2.00    2.43  1.48   1.00   4.00   3.00  0.22    -1.27\
Medical co-morbidity*       11 325  87.99 42.40 111.00   89.99 32.62   1.00 157.00 156.00 -0.49    -1.01\
meds*                       12 325   1.64  0.48   2.00    1.67  0.00   1.00   2.00   1.00 -0.58    -1.67\
Psychiatric co-morbidity*   13 325   1.07  0.26   1.00    1.00  0.00   1.00   2.00   1.00  3.24     8.55\
moca                        14 325  23.29  3.98  24.00   23.51  4.45   9.00  30.00  21.00 -0.48    -0.30\
cf_tc                       15 325  30.30  5.65  32.00   31.27  2.97   4.00  36.00  32.00 -1.91     4.33\
cf_ir                       16 325  18.77  7.53  19.00   18.84  7.41   2.00  35.00  33.00 -0.07    -0.73\
cf_dr                       17 325  18.14  7.53  19.00   18.16  7.41   0.00  35.00  35.00 -0.04    -0.60\
animal_names                18 325  13.41  3.40  14.00   13.41  2.97   4.00  23.00  19.00 -0.02    -0.09\
stroop_tt                   19 325 178.65 81.54 161.00  168.06 57.82   3.00 626.00 623.00  1.84     5.42\
stroop_err                  20 325   6.16  7.12   4.00    4.85  4.45   0.00  38.00  38.00  2.00     4.71\
nback_1                     21 325   6.92  1.65   7.00    7.06  1.48   1.00   9.00   8.00 -0.73     0.01\
nback_2                     22 325   4.53  1.85   5.00    4.56  1.48   0.00   8.00   8.00 -0.09    -0.71\
dvt_tt                      23 325 340.28 85.38 334.00  333.61 74.13 175.00 780.00 605.00  1.04     2.31\
dvt_err                     24 325   9.35 10.83   7.00    7.42  5.93   0.00  86.00  86.00  3.31    16.15\
                            se\
Weight                    0.60\
Height                    0.00\
BMI                       0.19\
Gender*                   0.03\
Age                       0.49\
address*                  0.04\
marital_stat*             0.02\
edu*                      0.06\
occu*                     0.06\
income*                   0.06\
Medical co-morbidity*     2.35\
meds*                     0.03\
Psychiatric co-morbidity* 0.01\
moca                      0.22\
cf_tc                     0.31\
cf_ir                     0.42\
cf_dr                     0.42\
animal_names              0.19\
stroop_tt                 4.52\
stroop_err                0.40\
nback_1                   0.09\
nback_2                   0.10\
dvt_tt                    4.74\
dvt_err                   0.60\


> # first we check for normality assumptions\
> shapiro.test(nimdata_325$moca) # using shapiro tests\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$moca\
W = 0.96663, p-value = 8.379e-07\
\
> shapiro.test(nimdata_325$BMI)\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$BMI\
W = 0.95984, p-value = 8.679e-08\
\
> shapiro.test(nimdata_325$cf_tc)\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$cf_tc\
W = 0.81006, p-value < 2.2e-16\
\
> shapiro.test(nimdata_325$cf_ir)\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$cf_ir\
W = 0.986, p-value = 0.003049\
\
> shapiro.test(nimdata_325$cf_dr)\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$cf_dr\
W = 0.98967, p-value = 0.02143\
\
> shapiro.test(nimdata_325$animal_names)\
\
	Shapiro-Wilk normality test\
\
data:  nimdata_325$animal_names\
W = 0.98774, p-value = 0.00754\
\


> # and then a histogram\
> ggplot(nimdata_325, aes(x = moca)) + # FOR MOCA scores\
+   geom_histogram(aes(y = after_stat(density)),\
+                  binwidth = 1, fill = "steelblue", color = "white") +\
+   geom_density(color = "black") +\
+   theme_minimal() +\
+   labs(x = "MOCA Scores", y = "Density", title = "MOCA Histogram and Density Plot")\
> ggplot(nimdata_325, aes(x = BMI)) + # FOR BMI values\
+   geom_histogram(aes(y = after_stat(density)),\
+                  binwidth = 1, fill = "steelblue", color = "white") +\
+   geom_density(color = "black") +\
+   theme_minimal() +\
+   labs(x = "BMI Values", y = "Density", title = "BMI Histogram and Density Plot")\



> # first we apply a simple correlation between BMI and moca scores\
> bmi_moca_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, moca, method = "kendall"),\
+     p_value = cor.test(BMI, moca, method = "kendall")$p.value\
+   ) # we are using kendall tau here because spearman does not work best when their are multiple tied values\
> print(bmi_moca_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0558   0.147\


> # Complex figure Test Copy and BMI correlation\
> bmi_cftc_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, cf_tc, method = "kendall"),\
+     p_value = cor.test(BMI, cf_tc, method = "kendall")$p.value\
+   )\
> print(bmi_cftc_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0156   0.686\


> # Complex figure Immediate Recall and BMI correlation\
> bmi_cfir_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, cf_ir, method = "kendall"),\
+     p_value = cor.test(BMI, cf_ir, method = "kendall")$p.value\
+   )\
> print(bmi_cfir_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0655  0.0831\


> # Complex figure Delayed Recall and BMI correlation\
> bmi_cfdr_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, cf_dr, method = "kendall"),\
+     p_value = cor.test(BMI, cf_dr, method = "kendall")$p.value\
+   )\
> print(bmi_cfdr_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0670  0.0766\


> # Animal Names Test and BMI correlation\
> bmi_animal_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, animal_names, method = "kendall"),\
+     p_value = cor.test(BMI, animal_names, method = "kendall")$p.value\
+   )\
> print(bmi_animal_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0137   0.723\


> # 1st method: To assess the stroop test scores, which has two components: Stroop_time and Stroop_errors, we first standardize this score and combine it\
> nimdata_325 <- nimdata_325 %>% \
+   mutate( # scale() is used to calculate Z scores\
+     stroop_composite = scale(stroop_tt) * scale(stroop_err) # we specifically multiply the data since these two scores are generally uncorrelated, and tie together to increase or decrease accuracy\
+   )\


> stroop_bmi_z_corr <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, stroop_composite, method = "spearman"),\
+     p_value = cor.test(BMI, stroop_composite, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, stroop_composite, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(stroop_bmi_z_corr)\
# A tibble: 1 \'d7 3\
      N correlation[,1] p_value\
  <int>           <dbl>   <dbl>\
1   325          0.0401   0.472\


> # 2nd method: using Inverse Efficiency Score (IES). Very useful for speed-accuracy trade-off psychological scores\
> nimdata_325 <- nimdata_325 %>% \
+   mutate(stroop_ies = stroop_tt / (1 + stroop_err)) # stroop_ies = stroop inverse efficiency score\
> ies_stroop_result <- nimdata_325 %>% # now we store the correlation results here\
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, stroop_ies, method = "spearman"),\
+     p_value = cor.test(BMI, stroop_ies, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, stroop_ies, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(ies_stroop_result) #print the results\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325      0.0822   0.139\


> # now we move to nBack tests (1 and 2)\
> bmi_nback1_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, nback_1, method = "spearman"),\
+     p_value = cor.test(BMI, nback_1, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, nback_1, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(bmi_nback1_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0492   0.376\


> bmi_nback2_cor <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, nback_2, method = "spearman"),\
+     p_value = cor.test(BMI, nback_2, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, nback_2, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(bmi_nback2_cor)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0869   0.118\


> nimdata_325 <- nimdata_325 %>% \
+   mutate( # scale() is used to calculate Z scores\
+     dvt_composite = scale(dvt_tt) * scale(dvt_err) # we specifically multiply the data since these two scores are generally uncorrelated, and tie together to increase or decrease accuracy\
+   )\
> bmi_dvt_z_corr <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, dvt_composite, method = "spearman"),\
+     p_value = cor.test(BMI, dvt_composite, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, dvt_composite, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(bmi_dvt_z_corr)\
# A tibble: 1 \'d7 3\
      N correlation[,1] p_value\
  <int>           <dbl>   <dbl>\
1   325         -0.0519   0.351\


> # Now we use Inverse Efficiency Score calculation for DVT scores\
> nimdata_325 <- nimdata_325 %>% \
+   mutate(dvt_ies = dvt_tt/(dvt_err + 1))\
> dvt_ies_result <- nimdata_325 %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, dvt_ies, method = "spearman"),\
+     p_value = cor.test(BMI, dvt_ies, method = "spearman")$p.value\
+   )\
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, dvt_ies, method = "spearman")$p.value`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \
> print(dvt_ies_result)\
# A tibble: 1 \'d7 3\
      N correlation p_value\
  <int>       <dbl>   <dbl>\
1   325     -0.0365   0.512\


# So till now we have calculate correlations for all neuropsychological tests with BMI's
# We take the next step and assess **SUBGROUP ANALYSIS BY EDUCATION**
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, moca, method = "kendall"),
+     p_value = cor.test(BMI, moca, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152   -0.0313    0.582 
2 high_school    71    0.000419  0.996 
3 inter          52   -0.189     0.0533
4 prof           50   -0.0610    0.549 

> # Subgroup Analysis by Education for CF_TC
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, cf_tc, method = "kendall"),
+     p_value = cor.test(BMI, cf_tc, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152     -0.0599 0.293  
2 high_school    71      0.222  0.00759
3 inter          52     -0.313  0.00150
4 prof           50      0.0186 0.858  

> # Subgroup Analysis by Education for CF_IR
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, cf_ir, method = "kendall"),
+     p_value = cor.test(BMI, cf_ir, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152     -0.0731  0.189 
2 high_school    71      0.0859  0.297 
3 inter          52     -0.244   0.0119
4 prof           50     -0.0635  0.524 

> # Subgroup Analysis by Education for CF_DR
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, cf_dr, method = "kendall"),
+     p_value = cor.test(BMI, cf_dr, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152     -0.0501 0.368  
2 high_school    71      0.119  0.151  
3 inter          52     -0.260  0.00748
4 prof           50     -0.154  0.123  

> # Subgroup Analysis by Education for Animal Names Test
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, animal_names, method = "kendall"),
+     p_value = cor.test(BMI, animal_names, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152    -0.0363    0.525
2 high_school    71     0.00127   0.988
3 inter          52    -0.0884    0.373
4 prof           50     0.0554    0.584

> # Subgroup Analysis by Education for Stroop Composite Score
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, stroop_composite, method = "kendall"),
+     p_value = cor.test(BMI, stroop_composite, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation[,1] p_value
  <chr>       <int>           <dbl>   <dbl>
1 grad          152          0.0758   0.166
2 high_school    71         -0.107    0.187
3 inter          52          0.121    0.204
4 prof           50          0.0359   0.713

> # Subgroup Analysis by Education for DVT Composite Score
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, dvt_composite, method = "kendall"),
+     p_value = cor.test(BMI, dvt_composite, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation[,1] p_value
  <chr>       <int>           <dbl>   <dbl>
1 grad          152        -0.00924   0.866
2 high_school    71         0.0225    0.781
3 inter          52        -0.154     0.107
4 prof           50        -0.152     0.120

> # Subgroup Analysis by Education for Stroop IES
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, stroop_ies, method = "kendall"),
+     p_value = cor.test(BMI, stroop_ies, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152      0.0371   0.497
2 high_school    71      0.128    0.114
3 inter          52      0.0650   0.497
4 prof           50      0.0384   0.694

> # Subgroup Analysis by Education for DVT IES
> nimdata_325 %>% 
+   group_by(edu) %>% 
+   summarise(
+     N = n(),
+     correlation = cor(BMI, dvt_ies, method = "kendall"),
+     p_value = cor.test(BMI, dvt_ies, method = "kendall")$p.value
+   )
# A tibble: 4 × 4
  edu             N correlation p_value
  <chr>       <int>       <dbl>   <dbl>
1 grad          152     -0.0533   0.330
2 high_school    71      0.0745   0.358
3 inter          52     -0.0196   0.837
4 prof           50     -0.107    0.273




> # We take the next step and assess **SUBGROUP ANALYSIS BY OCCUPATION**\
> # to do it by education, simply replace occu with edu, and run the analysis again\
> nimdata_325 %>% \
+   group_by(occu) %>% \
+   summarise(\
+     N = n(),\
+     correlation = cor(BMI, cf_tc, method = "kendall"),\
+     p_value = cor.test(BMI, cf_tc, method = "kendall")$p.value\
+   )\
# A tibble: 4 \'d7 4\
  occu                  N correlation p_value\
  <chr>             <int>       <dbl>   <dbl>\
1 Unemployed          118    -0.145    0.0254\
2 associates/clerks    47    -0.00388  0.970 \
3 professionals        79     0.0592   0.462 \
4 skilled_worker       81     0.0349   0.653 \
Warning message:\
There was 1 warning in `summarise()`.\
\uc0\u8505  In argument: `p_value = cor.test(BMI, cf_tc, method = "kendall")$p.value`.\
\uc0\u8505  In group 2: `occu = "associates/clerks"`.\
Caused by warning in `cor.test.default()`:\
! Cannot compute exact p-value with ties \



> # first we do plotting between BMI and MOCA for subgroups of Education\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = moca)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "MOCA scores", title = "BMI vs MOCA correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # then for cf_tt\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = cf_tc)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "CF_TC scores", title = "BMI vs CF_TC correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # then for cf_ir\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = cf_ir)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "CF_IR scores", title = "BMI vs CF_IR correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # then for cf_dr\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = cf_dr)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "CF_DR scores", title = "BMI vs CF_DR correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # now for animal names test\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = animal_names)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "Animal names scores", title = "BMI vs Animal Names Test correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # now for nback_1\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = nback_1)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "Nback_1 scores", title = "BMI vs Nback_1 correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # now for nback_2\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = nback_2)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "Nback_2 scores", title = "BMI vs Nback_2 correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # now for Stroop IES scores\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = stroop_ies)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "Stroop IES scores", title = "BMI vs Stroop_IES correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'\
> # now for DVT IES scores\
> nimdata_325 %>% \
+   ggplot(aes(x = BMI, y = dvt_ies)) +\
+   geom_point() + #for scatterplots\
+   geom_smooth(color = "blue", method = lm, se = FALSE) + # for density line\
+   theme_minimal() +\
+   labs(x = "BMI", y = "DVT IES scores", title = "BMI vs DVT_IES correlation for subgroups of Education") +\
+   facet_wrap(~ edu, scale = "free") # facet_wrap is like subgroup analysis but for plotting\
`geom_smooth()` using formula = 'y ~ x'}
